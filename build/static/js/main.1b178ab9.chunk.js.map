{"version":3,"sources":["component/header/header.js","component/tile/tile.js","component/footer/footer.js","component/orderTable/OrderTable.js","component/userTable/UserTable.js","component/detailTable/DetailTable.js","component/chart/Charts.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Tile","props","Text1","TodayOrderCount","Text2","WeekOrderCount","Footer","OrderTable","orderTableData","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","orderNum","scope","amount","quantity","style","textTransform","userName","UserTable","userTableData","region","DetailTable","detailTableData","createdDate","status","Charts","dateData","amountData","option","xAxis","type","data","yAxis","series","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","state","totalOrders","topFiveOrder","bottomFiveOrder","topFiveUsers","bottomFiveUsers","currentDayOrderCount","currentDayOrderAmount","currentWeekOrderAmount","currentWeekOrderCount","currentMonthOrderAmount","curentMonthOrderCount","lastMonthOrderAmount","lastMonthOrderCount","database","ref","on","snapshot","val","newState","i","length","push","sort","a","b","todayDate","Date","toISOString","slice","todayTotalOrderQuantity","todayTotalOrderAmount","weekData","today","getDay","j","checkDate","getFullYear","getMonth","getDate","k","currentMonthOrderCount","date","d","setState","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1b178ab9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div className=\"logo\">Order Dashboard</div>\r\n        <div>\r\n          <ul>\r\n            <li>Home</li>\r\n            <li>About</li>\r\n            <li>Service</li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './tile.css';\r\n\r\nfunction Tile(props) {\r\n   // console.log(props)\r\n  return (\r\n    <div className=\"card\">\r\n        <div className=\"box\">\r\n        <p>{props.Text1} {props.TodayOrderCount}</p>\r\n        <p>{props.Text2} {props.WeekOrderCount}</p>\r\n       </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","import React from 'react';\r\nimport './footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <footer>\r\n          <div className=\"inner\">\r\n            <p>@copyright 2020</p>\r\n          </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction OrderTable({orderTableData}) {\n  //let temp2 = [...temp]\n  //  console.log('pop', props)\n    return (\n        <div>\n        <TableContainer className=\"order-table\" component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ORDER NO</TableCell>\n              <TableCell align=\"center\">TOTAL AMOUNT</TableCell>\n              <TableCell align=\"center\">TOTAL QUANTITY</TableCell>\n              <TableCell align=\"center\">USER NAME</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orderTableData.map((row) => (\n              <TableRow key={row.orderNum}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.orderNum}\n                </TableCell>\n                <TableCell align=\"center\">{row.amount}</TableCell>\n                <TableCell align=\"center\">{row.quantity}</TableCell>\n                <TableCell\n                  align=\"center\"\n                  style={{ textTransform: \"capitalize\" }}\n                >\n                  {row.userName}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n    )\n}\n\nexport default OrderTable;\n","import React from 'react';\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction UserTable({userTableData}) {\n    return (\n        <div>\n            <TableContainer className=\"order-table\" component={Paper}>\n            <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                <TableCell>USER NAME</TableCell>\n                <TableCell align=\"center\">TOTAL AMOUNT</TableCell>\n                <TableCell align=\"center\">TOTAL QUANTITY</TableCell>\n                <TableCell align=\"center\">CITY</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {userTableData.map((row) => (\n                <TableRow key={row.orderNum}>\n                    <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ textTransform: \"capitalize\" }}\n                    >\n                    {row.userName}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.amount}</TableCell>\n                    <TableCell align=\"center\">{row.quantity}</TableCell>\n                    <TableCell align=\"center\">{row.region}</TableCell>\n                </TableRow>\n                ))}\n            </TableBody>\n            </Table>\n        </TableContainer>\n        </div>\n    )\n}\n\nexport default UserTable\n","import React from 'react';\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction DetailTable({detailTableData}) {\n    return (\n        <div>\n        <TableContainer className=\"order-table\" component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>USER NAME</TableCell>\n              <TableCell align=\"center\">ORDER NO</TableCell>\n              <TableCell align=\"center\">ORDER DATE</TableCell>\n              <TableCell align=\"center\">STATUS</TableCell>\n              <TableCell align=\"center\">QUANTITY</TableCell>\n              <TableCell align=\"center\">TOTAL AMOUNT</TableCell>\n              <TableCell align=\"center\">CITY</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {detailTableData.map((row) => (\n              <TableRow key={row.orderNum}>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  style={{ textTransform: \"capitalize\" }}\n                >\n                  {row.userName}\n                </TableCell>\n                <TableCell align=\"center\">{row.orderNum}</TableCell>\n                <TableCell align=\"center\">{row.createdDate}</TableCell>\n                <TableCell\n                  align=\"center\"\n                  style={{ textTransform: \"capitalize\" }}\n                >\n                  {row.status}\n                </TableCell>\n                <TableCell align=\"center\">{row.quantity}</TableCell>\n                <TableCell align=\"center\">{row.amount}</TableCell>\n                <TableCell\n                  align=\"center\"\n                  style={{ textTransform: \"capitalize\" }}\n                >\n                  {row.region}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n        </div>\n    )\n}\n\nexport default DetailTable\n","import React from 'react';\nimport ReactEcharts from \"echarts-for-react\";\n\nfunction Charts({dateData, amountData}) {\n    return (\n        <div>\n            <ReactEcharts\n            option={{\n            xAxis: {\n                type: \"category\",\n                data: dateData,\n            },\n            yAxis: {\n                type: \"value\",\n            },\n            series: [\n                {\n                data: amountData,\n                type: \"line\",\n                },\n            ],\n            }}\n        />\n        </div>\n    )\n}\n\nexport default Charts\n","import firebase from \"firebase\";\n\nlet DB_CONFIG = {\n  apiKey: \"AIzaSyCMdKZ0dv7AVqBHmQqpKkAZ3NU5DCPgzLk\",\n  authDomain: \"order-dashboard-7a2cd.firebaseapp.com\",\n  databaseURL: \"https://order-dashboard-7a2cd.firebaseio.com\",\n  projectId: \"order-dashboard-7a2cd\",\n  storageBucket: \"order-dashboard-7a2cd.appspot.com\",\n  messagingSenderId: \"89638021951\",\n  appId: \"1:89638021951:web:34298ad97f3f93a83c818a\",\n  measurementId: \"G-YJ7490ZPC3\",\n};\n\nfirebase.initializeApp(DB_CONFIG);\nexport default firebase;\n","import React from \"react\";\nimport Header from \"./component/header/header\";\nimport \"./App.css\";\nimport Tile from \"./component/tile/tile\";\nimport Footer from \"./component/footer/footer\";\nimport OrderTable from \"./component/orderTable/OrderTable\";\nimport UserTable from \"./component/userTable/UserTable\";\nimport DetailTable from \"./component/detailTable/DetailTable\";\nimport Chart from \"./component/chart/Charts\";\n\nimport firebase from \"./firebase\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalOrders: [],\n      topFiveOrder: [],\n      bottomFiveOrder: [],\n      topFiveUsers: [],\n      bottomFiveUsers: [],\n      dateData: [],\n      amountData: [],\n      currentDayOrderCount: 0,\n      currentDayOrderAmount: 0,\n      currentWeekOrderAmount: 0,\n      currentWeekOrderCount: 0,\n      currentMonthOrderAmount: 0,\n      curentMonthOrderCount: 0,\n      lastMonthOrderAmount: 0,\n      lastMonthOrderCount: 0,\n    };\n  }\n\n  componentDidMount() {\n    const totalOrdersRef = firebase.database().ref(\"orders\");\n    totalOrdersRef.on(\"value\", (snapshot) => {\n      let totalOrders = snapshot.val();\n      let newState = [];\n\n      for (var i = 0; i < totalOrders.length; i++) {\n        newState.push({\n          orderNum: totalOrders[i].orderNum,\n          userName: totalOrders[i].userName,\n          createdDate: totalOrders[i].createdDate,\n          status: totalOrders[i].status,\n          amount: totalOrders[i].amount,\n          quantity: totalOrders[i].quantity,\n          region: totalOrders[i].region,\n        });\n      }\n\n      // for getting top 5 order based on order number\n      let topFiveOrder = [...newState];\n      topFiveOrder = topFiveOrder.sort((a, b) => {\n        return b.orderNum - a.orderNum;\n      });\n\n      // for getting bottom 5 order based on order number\n      let bottomFiveOrder = [...newState];\n      bottomFiveOrder = bottomFiveOrder.sort((a, b) => {\n        return a.orderNum - b.orderNum;\n      });\n\n      // for getting top 5 users based on order amount\n      let topFiveUsers = [...newState];\n      topFiveUsers = topFiveUsers.sort((a, b) => {\n        return b.amount - a.amount;\n      });\n\n      // for getting bottom 5 users based on order amount\n      let bottomFiveUsers = [...newState];\n      bottomFiveUsers = bottomFiveUsers.sort((a, b) => {\n        return a.amount - b.amount;\n      });\n\n      // for getting date data array for plotting on chart\n      let dateData = [...newState];\n      dateData = dateData.map((data) => {\n        return data.createdDate;\n      });\n\n      // for getting amount data array for plotting on chart\n      let amountData = [...newState];\n      amountData = amountData.map((data) => {\n        return data.amount;\n      });\n\n      // for getting today's order amount and quantity\n      let todayDate = new Date();\n      //  todayDate.setDate(4)\n      todayDate = todayDate.toISOString().slice(0, 10);\n      let todayTotalOrderQuantity = 0;\n      let todayTotalOrderAmount = 0;\n      for (let i = 0; i < newState.length; i++) {\n        if (todayDate === newState[i].createdDate) {\n          todayTotalOrderQuantity += newState[i].quantity;\n          todayTotalOrderAmount += newState[i].amount;\n        }\n      }\n\n      // for getting current week amount and quantity\n      let weekData = [...newState];\n      let currentWeekOrderAmount = 0;\n      let currentWeekOrderCount = 0;\n\n      var today = new Date();\n      //  today.setDate(4);\n\n      for (let i = today.getDay(), j = 0; i >= 0; i--, j++) {\n        let checkDate = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          today.getDate() - j + 1\n        )\n          .toISOString()\n          .slice(0, 10);\n\n        for (let k = 0; k < newState.length; k++) {\n          if (checkDate === newState[k].createdDate) {\n            currentWeekOrderAmount += newState[k].amount;\n            currentWeekOrderCount += newState[k].quantity;\n          }\n        }\n      }\n\n      // for getting current month data\n      let currentMonthOrderAmount = 0;\n      let currentMonthOrderCount = 0;\n      for (let i = today.getDate(), j = 0; i >= 1; i--, j++) {\n        let checkDate = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          today.getDate() - j + 1\n        )\n          .toISOString()\n          .slice(0, 10);\n\n        for (let k = 0; k < weekData.length; k++) {\n          if (checkDate === weekData[k].createdDate) {\n            currentMonthOrderAmount += weekData[k].amount;\n            currentMonthOrderCount += weekData[k].quantity;\n          }\n        }\n      }\n\n      // for getting last month data\n      let lastMonthOrderAmount = 0;\n      let lastMonthOrderCount = 0;\n\n      for (let i = 1; i <= 31; i++) {\n        let date = new Date();\n        let d = new Date(date.getFullYear(), date.getMonth() - 1, 1 + i)\n          .toISOString()\n          .slice(0, 10);\n\n        for (let k = 0; k < weekData.length; k++) {\n          if (d === weekData[k].createdDate) {\n            lastMonthOrderAmount += weekData[k].amount;\n            lastMonthOrderCount += weekData[k].quantity;\n          }\n        }\n      }\n\n      this.setState({\n        totalOrders: newState,\n        topFiveOrder: topFiveOrder.slice(0, 5),\n        bottomFiveOrder: bottomFiveOrder.slice(0, 5),\n        topFiveUsers: topFiveUsers.slice(0, 5),\n        bottomFiveUsers: bottomFiveUsers.slice(0, 5),\n        dateData: dateData,\n        amountData: amountData,\n        currentDayOrderCount: todayTotalOrderQuantity,\n        currentDayOrderAmount: todayTotalOrderAmount,\n        currentWeekOrderCount: currentWeekOrderCount,\n        currentWeekOrderAmount: currentWeekOrderAmount,\n        currentMonthOrderAmount: currentMonthOrderAmount,\n        currentMonthOrderCount: currentMonthOrderCount,\n        lastMonthOrderAmount: lastMonthOrderAmount,\n        lastMonthOrderCount: lastMonthOrderCount,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"conatiner\">\n        <Header />\n\n        <div className=\"box-outer\">\n          <Tile\n            Text1={\"Today’s total  number of Orders - \"}\n            Text2={\"Current week total order’s count - \"}\n            TodayOrderCount={this.state.currentDayOrderCount}\n            WeekOrderCount={this.state.currentWeekOrderCount}\n          />\n          <Tile\n            Text1={\"Today’s total  Order’s amount - \"}\n            Text2={\"Current week total order’s amount - \"}\n            TodayOrderCount={this.state.currentDayOrderAmount}\n            WeekOrderCount={this.state.currentWeekOrderAmount}\n          />\n          <Tile\n            Text1={\"Current month total order’s count - \"}\n            Text2={\"Last month total order’s count - \"}\n            TodayOrderCount={this.state.currentMonthOrderCount}\n            WeekOrderCount={this.state.lastMonthOrderCount}\n          />\n          <Tile\n            Text1={\"Current month total order’s amount -\"}\n            Text2={\"Last month total order’s amount-\"}\n            TodayOrderCount={this.state.currentMonthOrderAmount}\n            WeekOrderCount={this.state.lastMonthOrderAmount}\n          />\n        </div>\n\n        <Chart\n          dateData={this.state.dateData}\n          amountData={this.state.amountData}\n        />\n\n        <h2>Top five Order </h2>\n        <OrderTable orderTableData={this.state.topFiveOrder} />\n\n        <h2>Bottom five Order </h2>\n        <OrderTable orderTableData={this.state.bottomFiveOrder} />\n\n        <h2>Top five Users </h2>\n        <UserTable userTableData={this.state.topFiveUsers} />\n\n        <h2>Bottom five Users </h2>\n        <UserTable userTableData={this.state.bottomFiveUsers} />\n\n        <h2>Detail Order Report </h2>\n        <DetailTable detailTableData={this.state.totalOrders} />\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}