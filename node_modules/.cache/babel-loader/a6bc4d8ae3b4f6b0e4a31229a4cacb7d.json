{"ast":null,"code":"var _jsxFileName = \"/home/mannu/Desktop/Project/order-dashboard/src/App.js\";\nimport React from \"react\";\nimport Header from \"./component/header/header\";\nimport \"./App.css\";\nimport Tile from \"./component/tile/tile\";\nimport Footer from \"./component/footer/footer\";\nimport OrderTable from \"./component/orderTable/OrderTable\";\nimport UserTable from \"./component/userTable/UserTable\";\nimport DetailTable from \"./component/detailTable/DetailTable\";\nimport Chart from \"./component/chart/Charts\";\nimport firebase from \"./firebase\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalOrders: [],\n      topFiveOrder: [],\n      bottomFiveOrder: [],\n      topFiveUsers: [],\n      bottomFiveUsers: [],\n      dateData: [],\n      amountData: [],\n      currentDayOrderCount: 0,\n      currentDayOrderAmount: 0,\n      currentWeekOrderAmount: 0,\n      currentWeekOrderCount: 0,\n      currentMonthOrderAmount: 0,\n      curentMonthOrderCount: 0,\n      lastMonthOrderAmount: 0,\n      lastMonthOrderCount: 0\n    };\n  }\n\n  componentDidMount() {\n    const totalOrdersRef = firebase.database().ref(\"orders\");\n    totalOrdersRef.on(\"value\", snapshot => {\n      let totalOrders = snapshot.val();\n      let newState = [];\n\n      for (var i = 0; i < totalOrders.length; i++) {\n        newState.push({\n          orderNum: totalOrders[i].orderNum,\n          userName: totalOrders[i].userName,\n          createdDate: totalOrders[i].createdDate,\n          status: totalOrders[i].status,\n          amount: totalOrders[i].amount,\n          quantity: totalOrders[i].quantity,\n          region: totalOrders[i].region\n        });\n      } // for getting top 5 order based on order number\n\n\n      let topFiveOrder = [...newState];\n      topFiveOrder = topFiveOrder.sort((a, b) => {\n        return b.orderNum - a.orderNum;\n      }); // for getting bottom 5 order based on order number\n\n      let bottomFiveOrder = [...newState];\n      bottomFiveOrder = bottomFiveOrder.sort((a, b) => {\n        return a.orderNum - b.orderNum;\n      }); // for getting top 5 users based on order amount\n\n      let topFiveUsers = [...newState];\n      topFiveUsers = topFiveUsers.sort((a, b) => {\n        return b.amount - a.amount;\n      }); // for getting bottom 5 users based on order amount\n\n      let bottomFiveUsers = [...newState];\n      bottomFiveUsers = bottomFiveUsers.sort((a, b) => {\n        return a.amount - b.amount;\n      }); // for getting date data array for plotting on chart\n\n      let dateData = [...newState];\n      dateData = dateData.map(data => {\n        return data.createdDate;\n      }); // for getting amount data array for plotting on chart\n\n      let amountData = [...newState];\n      amountData = amountData.map(data => {\n        return data.amount;\n      }); // for getting today's order amount and quantity\n\n      let todayDate = new Date(); //  todayDate.setDate(4)\n\n      todayDate = todayDate.toISOString().slice(0, 10);\n      let todayTotalOrderQuantity = 0;\n      let todayTotalOrderAmount = 0;\n\n      for (let i = 0; i < newState.length; i++) {\n        if (todayDate === newState[i].createdDate) {\n          todayTotalOrderQuantity += newState[i].quantity;\n          todayTotalOrderAmount += newState[i].amount;\n        }\n      } // for getting current week amount and quantity\n\n\n      let weekData = [...newState];\n      let currentWeekOrderAmount = 0;\n      let currentWeekOrderCount = 0;\n      var today = new Date(); //  today.setDate(4);\n\n      for (let i = today.getDay(), j = 0; i >= 0; i--, j++) {\n        let checkDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - j + 1).toISOString().slice(0, 10);\n\n        for (let k = 0; k < newState.length; k++) {\n          if (checkDate === newState[k].createdDate) {\n            currentWeekOrderAmount += newState[k].amount;\n            currentWeekOrderCount += newState[k].quantity;\n          }\n        }\n      } // for getting current month data\n\n\n      let currentMonthOrderAmount = 0;\n      let currentMonthOrderCount = 0;\n\n      for (let i = today.getDate(), j = 0; i >= 1; i--, j++) {\n        let checkDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - j + 1).toISOString().slice(0, 10);\n\n        for (let k = 0; k < weekData.length; k++) {\n          if (checkDate === weekData[k].createdDate) {\n            currentMonthOrderAmount += weekData[k].amount;\n            currentMonthOrderCount += weekData[k].quantity;\n          }\n        }\n      } // for getting last month data\n\n\n      let lastMonthOrderAmount = 0;\n      let lastMonthOrderCount = 0;\n\n      for (let i = 1; i <= 31; i++) {\n        let date = new Date();\n        let d = new Date(date.getFullYear(), date.getMonth() - 1, 1 + i).toISOString().slice(0, 10);\n\n        for (let k = 0; k < weekData.length; k++) {\n          if (d === weekData[k].createdDate) {\n            lastMonthOrderAmount += weekData[k].amount;\n            lastMonthOrderCount += weekData[k].quantity;\n          }\n        }\n      }\n\n      this.setState({\n        totalOrders: newState,\n        topFiveOrder: topFiveOrder.slice(0, 5),\n        bottomFiveOrder: bottomFiveOrder.slice(0, 5),\n        topFiveUsers: topFiveUsers.slice(0, 5),\n        bottomFiveUsers: bottomFiveUsers.slice(0, 5),\n        dateData: dateData,\n        amountData: amountData,\n        currentDayOrderCount: todayTotalOrderQuantity,\n        currentDayOrderAmount: todayTotalOrderAmount,\n        currentWeekOrderCount: currentWeekOrderCount,\n        currentWeekOrderAmount: currentWeekOrderAmount,\n        currentMonthOrderAmount: currentMonthOrderAmount,\n        currentMonthOrderCount: currentMonthOrderCount,\n        lastMonthOrderAmount: lastMonthOrderAmount,\n        lastMonthOrderCount: lastMonthOrderCount\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conatiner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      Text1: \"Today’s total  number of Orders - \",\n      Text2: \"Current week total order’s count - \",\n      TodayOrderCount: this.state.currentDayOrderCount,\n      WeekOrderCount: this.state.currentWeekOrderCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Tile, {\n      Text1: \"Today’s total  Order’s amount - \",\n      Text2: \"Current week total order’s amount - \",\n      TodayOrderCount: this.state.currentDayOrderAmount,\n      WeekOrderCount: this.state.currentWeekOrderAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Tile, {\n      Text1: \"Current month total order’s count - \",\n      Text2: \"Last month total order’s count - \",\n      TodayOrderCount: this.state.currentMonthOrderCount,\n      WeekOrderCount: this.state.lastMonthOrderCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Tile, {\n      Text1: \"Current month total order’s amount -\",\n      Text2: \"Last month total order’s amount-\",\n      TodayOrderCount: this.state.currentMonthOrderAmount,\n      WeekOrderCount: this.state.lastMonthOrderAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Chart, {\n      dateData: this.state.dateData,\n      amountData: this.state.amountData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, \"Top five Order \"), /*#__PURE__*/React.createElement(OrderTable, {\n      orderTableData: this.state.topFiveOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, \"Bottom five Order \"), /*#__PURE__*/React.createElement(OrderTable, {\n      orderTableData: this.state.bottomFiveOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, \"Top five Users \"), /*#__PURE__*/React.createElement(UserTable, {\n      userTableData: this.state.topFiveUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, \"Bottom five Users \"), /*#__PURE__*/React.createElement(UserTable, {\n      userTableData: this.state.bottomFiveUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }, \"Detail Order Report \"), /*#__PURE__*/React.createElement(DetailTable, {\n      detailTableData: this.state.totalOrders,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mannu/Desktop/Project/order-dashboard/src/App.js"],"names":["React","Header","Tile","Footer","OrderTable","UserTable","DetailTable","Chart","firebase","App","Component","constructor","props","state","totalOrders","topFiveOrder","bottomFiveOrder","topFiveUsers","bottomFiveUsers","dateData","amountData","currentDayOrderCount","currentDayOrderAmount","currentWeekOrderAmount","currentWeekOrderCount","currentMonthOrderAmount","curentMonthOrderCount","lastMonthOrderAmount","lastMonthOrderCount","componentDidMount","totalOrdersRef","database","ref","on","snapshot","val","newState","i","length","push","orderNum","userName","createdDate","status","amount","quantity","region","sort","a","b","map","data","todayDate","Date","toISOString","slice","todayTotalOrderQuantity","todayTotalOrderAmount","weekData","today","getDay","j","checkDate","getFullYear","getMonth","getDate","k","currentMonthOrderCount","date","d","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./component/header/header\";\nimport \"./App.css\";\nimport Tile from \"./component/tile/tile\";\nimport Footer from \"./component/footer/footer\";\nimport OrderTable from \"./component/orderTable/OrderTable\";\nimport UserTable from \"./component/userTable/UserTable\";\nimport DetailTable from \"./component/detailTable/DetailTable\";\nimport Chart from \"./component/chart/Charts\";\n\nimport firebase from \"./firebase\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalOrders: [],\n      topFiveOrder: [],\n      bottomFiveOrder: [],\n      topFiveUsers: [],\n      bottomFiveUsers: [],\n      dateData: [],\n      amountData: [],\n      currentDayOrderCount: 0,\n      currentDayOrderAmount: 0,\n      currentWeekOrderAmount: 0,\n      currentWeekOrderCount: 0,\n      currentMonthOrderAmount: 0,\n      curentMonthOrderCount: 0,\n      lastMonthOrderAmount: 0,\n      lastMonthOrderCount: 0,\n    };\n  }\n\n  componentDidMount() {\n    const totalOrdersRef = firebase.database().ref(\"orders\");\n    totalOrdersRef.on(\"value\", (snapshot) => {\n      let totalOrders = snapshot.val();\n      let newState = [];\n\n      for (var i = 0; i < totalOrders.length; i++) {\n        newState.push({\n          orderNum: totalOrders[i].orderNum,\n          userName: totalOrders[i].userName,\n          createdDate: totalOrders[i].createdDate,\n          status: totalOrders[i].status,\n          amount: totalOrders[i].amount,\n          quantity: totalOrders[i].quantity,\n          region: totalOrders[i].region,\n        });\n      }\n\n      // for getting top 5 order based on order number\n      let topFiveOrder = [...newState];\n      topFiveOrder = topFiveOrder.sort((a, b) => {\n        return b.orderNum - a.orderNum;\n      });\n\n      // for getting bottom 5 order based on order number\n      let bottomFiveOrder = [...newState];\n      bottomFiveOrder = bottomFiveOrder.sort((a, b) => {\n        return a.orderNum - b.orderNum;\n      });\n\n      // for getting top 5 users based on order amount\n      let topFiveUsers = [...newState];\n      topFiveUsers = topFiveUsers.sort((a, b) => {\n        return b.amount - a.amount;\n      });\n\n      // for getting bottom 5 users based on order amount\n      let bottomFiveUsers = [...newState];\n      bottomFiveUsers = bottomFiveUsers.sort((a, b) => {\n        return a.amount - b.amount;\n      });\n\n      // for getting date data array for plotting on chart\n      let dateData = [...newState];\n      dateData = dateData.map((data) => {\n        return data.createdDate;\n      });\n\n      // for getting amount data array for plotting on chart\n      let amountData = [...newState];\n      amountData = amountData.map((data) => {\n        return data.amount;\n      });\n\n      // for getting today's order amount and quantity\n      let todayDate = new Date();\n      //  todayDate.setDate(4)\n      todayDate = todayDate.toISOString().slice(0, 10);\n      let todayTotalOrderQuantity = 0;\n      let todayTotalOrderAmount = 0;\n      for (let i = 0; i < newState.length; i++) {\n        if (todayDate === newState[i].createdDate) {\n          todayTotalOrderQuantity += newState[i].quantity;\n          todayTotalOrderAmount += newState[i].amount;\n        }\n      }\n\n      // for getting current week amount and quantity\n      let weekData = [...newState];\n      let currentWeekOrderAmount = 0;\n      let currentWeekOrderCount = 0;\n\n      var today = new Date();\n      //  today.setDate(4);\n\n      for (let i = today.getDay(), j = 0; i >= 0; i--, j++) {\n        let checkDate = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          today.getDate() - j + 1\n        )\n          .toISOString()\n          .slice(0, 10);\n\n        for (let k = 0; k < newState.length; k++) {\n          if (checkDate === newState[k].createdDate) {\n            currentWeekOrderAmount += newState[k].amount;\n            currentWeekOrderCount += newState[k].quantity;\n          }\n        }\n      }\n\n      // for getting current month data\n      let currentMonthOrderAmount = 0;\n      let currentMonthOrderCount = 0;\n      for (let i = today.getDate(), j = 0; i >= 1; i--, j++) {\n        let checkDate = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          today.getDate() - j + 1\n        )\n          .toISOString()\n          .slice(0, 10);\n\n        for (let k = 0; k < weekData.length; k++) {\n          if (checkDate === weekData[k].createdDate) {\n            currentMonthOrderAmount += weekData[k].amount;\n            currentMonthOrderCount += weekData[k].quantity;\n          }\n        }\n      }\n\n      // for getting last month data\n      let lastMonthOrderAmount = 0;\n      let lastMonthOrderCount = 0;\n\n      for (let i = 1; i <= 31; i++) {\n        let date = new Date();\n        let d = new Date(date.getFullYear(), date.getMonth() - 1, 1 + i)\n          .toISOString()\n          .slice(0, 10);\n\n        for (let k = 0; k < weekData.length; k++) {\n          if (d === weekData[k].createdDate) {\n            lastMonthOrderAmount += weekData[k].amount;\n            lastMonthOrderCount += weekData[k].quantity;\n          }\n        }\n      }\n\n      this.setState({\n        totalOrders: newState,\n        topFiveOrder: topFiveOrder.slice(0, 5),\n        bottomFiveOrder: bottomFiveOrder.slice(0, 5),\n        topFiveUsers: topFiveUsers.slice(0, 5),\n        bottomFiveUsers: bottomFiveUsers.slice(0, 5),\n        dateData: dateData,\n        amountData: amountData,\n        currentDayOrderCount: todayTotalOrderQuantity,\n        currentDayOrderAmount: todayTotalOrderAmount,\n        currentWeekOrderCount: currentWeekOrderCount,\n        currentWeekOrderAmount: currentWeekOrderAmount,\n        currentMonthOrderAmount: currentMonthOrderAmount,\n        currentMonthOrderCount: currentMonthOrderCount,\n        lastMonthOrderAmount: lastMonthOrderAmount,\n        lastMonthOrderCount: lastMonthOrderCount,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"conatiner\">\n        <Header />\n\n        <div className=\"box-outer\">\n          <Tile\n            Text1={\"Today’s total  number of Orders - \"}\n            Text2={\"Current week total order’s count - \"}\n            TodayOrderCount={this.state.currentDayOrderCount}\n            WeekOrderCount={this.state.currentWeekOrderCount}\n          />\n          <Tile\n            Text1={\"Today’s total  Order’s amount - \"}\n            Text2={\"Current week total order’s amount - \"}\n            TodayOrderCount={this.state.currentDayOrderAmount}\n            WeekOrderCount={this.state.currentWeekOrderAmount}\n          />\n          <Tile\n            Text1={\"Current month total order’s count - \"}\n            Text2={\"Last month total order’s count - \"}\n            TodayOrderCount={this.state.currentMonthOrderCount}\n            WeekOrderCount={this.state.lastMonthOrderCount}\n          />\n          <Tile\n            Text1={\"Current month total order’s amount -\"}\n            Text2={\"Last month total order’s amount-\"}\n            TodayOrderCount={this.state.currentMonthOrderAmount}\n            WeekOrderCount={this.state.lastMonthOrderAmount}\n          />\n        </div>\n\n        <Chart\n          dateData={this.state.dateData}\n          amountData={this.state.amountData}\n        />\n\n        <h2>Top five Order </h2>\n        <OrderTable orderTableData={this.state.topFiveOrder} />\n\n        <h2>Bottom five Order </h2>\n        <OrderTable orderTableData={this.state.bottomFiveOrder} />\n\n        <h2>Top five Users </h2>\n        <UserTable userTableData={this.state.topFiveUsers} />\n\n        <h2>Bottom five Users </h2>\n        <UserTable userTableData={this.state.bottomFiveUsers} />\n\n        <h2>Detail Order Report </h2>\n        <DetailTable detailTableData={this.state.totalOrders} />\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}